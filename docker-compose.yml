services:
  postgres:
    image: postgres:15
    container_name: cvilo_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB:       ${POSTGRES_DB:?error}
      POSTGRES_USER:     ${POSTGRES_USER:?error}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?error}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [cvilo-network]

  cvilo-api:
    image: ghcr.io/smhnaqvi/cveeker/cvilo-api:latest
    container_name: cvilo-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env.production
    networks: [cvilo-network]
    ports:
      - "8081:8081"
    volumes:
      - /app/tmp

  cvilo-clientarea:
    image: ghcr.io/smhnaqvi/cveeker/cvilo-clientarea:latest
    container_name: cvilo-clientarea
    restart: unless-stopped
    depends_on: [cvilo-api]
    env_file:
      - .env.production
    networks: [cvilo-network]
    ports:
      - "3009:3009"
    environment:
      VITE_API_URL: ${API_BASE_URL:?error}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://0.0.0.0:3009/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  cvilo-landing-nextjs:
    image: ghcr.io/smhnaqvi/cveeker/cvilo-landing-nextjs:latest
    container_name: cvilo-landing-nextjs
    restart: unless-stopped
    depends_on: [cvilo-api]
    env_file:
      - .env.production
    networks: [cvilo-network]
    ports:
      - "3001:3001"

networks:
  cvilo-network:
    driver: bridge

volumes:
  postgres_data: