name: CVILO API - Build & Deploy

on:
  push:
    branches: [ main ]
    paths: [ 'cvilo-api/**' ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write   # push to GHCR

env:
  BUILD_VERSION: ${{ github.sha }}
  BUILD_DATE: ${{ github.event.head_commit.timestamp }}
  API_BASE_URL: ${{ secrets.API_BASE_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create .env.production file
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB}}" >> .env.production
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST}}" >> .env.production
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD}}" >> .env.production
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT}}" >> .env.production
          echo "POSTGRES_SSLMODE=${{ secrets.POSTGRES_SSLMODE}}" >> .env.production
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER}}" >> .env.production
          echo "JWT_SECRET=${{ secrets.JWT_SECRET}}" >> .env.production
          echo "PORT=${{ secrets.PORT}}" >> .env.production
          echo "HOST=${{ secrets.HOST}}" >> .env.production
          echo "GIN_MODE=release" >> .env.production
          echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN}}" >> .env.production
          echo "API_BASE_URL=${{ secrets.API_BASE_URL }}" >> .env.production
          echo "LANDING_BASE_URL=${{ secrets.LANDING_BASE_URL}}" >> .env.production
          echo "LINKEDIN_CLIENT_ID=${{ secrets.LINKEDIN_CLIENT_ID}}" >> .env.production
          echo "LINKEDIN_CLIENT_SECRET=${{ secrets.LINKEDIN_CLIENT_SECRET}}" >> .env.production
          echo "LINKEDIN_REDIRECT_URL=${{ secrets.LINKEDIN_REDIRECT_URL}}" >> .env.production
          echo "AI_MODEL=${{ secrets.AI_MODEL }}" >> .env.production
          echo "AI_TOKEN=${{ secrets.AI_TOKEN }}" >> .env.production
          echo "AI_URL=${{ secrets.AI_URL }}" >> .env.production
          echo "USE_GITHUB_MODELS=${{ secrets.USE_GITHUB_MODELS}}" >> .env.production
          echo "MODELS_BASE_URL=${{ secrets.MODELS_BASE_URL}}" >> .env.production

      - name: Build & push
        env:
          IMAGE_NAME: ghcr.io/${{ github.repository }}/cvilo-api
        run: |
          IMAGE_NAME_LOWER=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
          docker build \
            --build-arg BUILD_VERSION=${{ env.BUILD_VERSION }} \
            --build-arg BUILD_DATE=${{ env.BUILD_DATE }} \
            --build-arg API_BASE_URL=${{ env.API_BASE_URL }} \
            -t $IMAGE_NAME_LOWER:latest \
            -t $IMAGE_NAME_LOWER:${{ env.BUILD_VERSION }} \
            ./cvilo-api
          docker push $IMAGE_NAME_LOWER:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-cvilo-api
      cancel-in-progress: true
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: github-deployer
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          envs: NON_INTERACTIVE
          script: |
            set -e
            cd /opt/cveeker
            git pull
            docker compose pull cvilo-api
            docker compose up -d cvilo-api
            docker compose ps